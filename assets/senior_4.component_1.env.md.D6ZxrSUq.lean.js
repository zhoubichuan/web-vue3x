import{b as n}from"./chunks/1.BnRC_fEI.js";import{d as t,o as l,c as p,a4 as h,G as i,w as r,j as a,B as k}from"./chunks/framework.BQSspPyc.js";const u=JSON.parse('{"title":"二.数据输入（富文本）","description":"","frontmatter":{"lang":"zh-CN","sidebarDepth":2,"meta":[{"name":"description","content":"个人总结的vuepress学习技术文档-语法"},{"name":"keywords","content":"vuepress,最新技术文档,vuepress语法,markdown语法"}]},"headers":[],"relativePath":"senior/4.component/1.env.md","filePath":"senior/4.component/1.env.md","lastUpdated":1726808611000}'),o={name:"senior/4.component/1.env.md"},F=t({...o,setup(d){return(E,s)=>{const e=k("demo-preview");return l(),p("div",null,[s[0]||(s[0]=h(`<h1 id="二-数据输入-富文本" tabindex="-1">二.数据输入（富文本） <a class="header-anchor" href="#二-数据输入-富文本" aria-label="Permalink to &quot;二.数据输入（富文本）&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">前言 --&gt; 富文本组件特点</p><p>了解常见组件的开发思路，项目中有很多二次封装的组件，大体设计思路上都是想通的，当遇到组件相关的问题时，可以直接查看相关组件的源码，从而快速定位问题。</p></div><h2 id="_1-目录结构" tabindex="-1">1.目录结构 <a class="header-anchor" href="#_1-目录结构" aria-label="Permalink to &quot;1.目录结构&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                        # 前端资源目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 # 图片目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> components</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # 公共组件目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pages</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                  # 页面目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> store</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                  # 状态管理 store 目录</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_2-组件封装" tabindex="-1">2.组件封装 <a class="header-anchor" href="#_2-组件封装" aria-label="Permalink to &quot;2.组件封装&quot;">​</a></h2><h2 id="_3-使用案例" tabindex="-1">3.使用案例 <a class="header-anchor" href="#_3-使用案例" aria-label="Permalink to &quot;3.使用案例&quot;">​</a></h2>`,6)),i(e,{title:"",description:"",code:"%3Ctemplate%3E%0A%20%20%20%20%3Cvue-button%3E%E6%8C%89%E9%92%AE%3C/vue-button%3E%0A%3C/template%3E%0A",showCode:"%3Cpre%20class%3D%22shiki%20shiki-themes%20github-light%20github-dark%20vp-code%22%20tabindex%3D%220%22%20v-pre%3D%22%22%3E%3Ccode%3E%3Cspan%20class%3D%22line%22%3E%3Cspan%20style%3D%22--shiki-light%3A%2324292E%3B--shiki-dark%3A%23E1E4E8%22%3E%26%23x3C%3B%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2322863A%3B--shiki-dark%3A%2385E89D%22%3Etemplate%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2324292E%3B--shiki-dark%3A%23E1E4E8%22%3E%3E%3C%2Fspan%3E%3C%2Fspan%3E%0A%3Cspan%20class%3D%22line%22%3E%3Cspan%20style%3D%22--shiki-light%3A%2324292E%3B--shiki-dark%3A%23E1E4E8%22%3E%20%20%20%20%26%23x3C%3B%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2322863A%3B--shiki-dark%3A%2385E89D%22%3Evue-button%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2324292E%3B--shiki-dark%3A%23E1E4E8%22%3E%3E%E6%8C%89%E9%92%AE%26%23x3C%3B%2F%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2322863A%3B--shiki-dark%3A%2385E89D%22%3Evue-button%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2324292E%3B--shiki-dark%3A%23E1E4E8%22%3E%3E%3C%2Fspan%3E%3C%2Fspan%3E%0A%3Cspan%20class%3D%22line%22%3E%3Cspan%20style%3D%22--shiki-light%3A%2324292E%3B--shiki-dark%3A%23E1E4E8%22%3E%26%23x3C%3B%2F%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2322863A%3B--shiki-dark%3A%2385E89D%22%3Etemplate%3C%2Fspan%3E%3Cspan%20style%3D%22--shiki-light%3A%2324292E%3B--shiki-dark%3A%23E1E4E8%22%3E%3E%3C%2Fspan%3E%3C%2Fspan%3E%3C%2Fcode%3E%3C%2Fpre%3E",suffixName:"vue",absolutePath:"/home/runner/work/web-vue3x/web-vue3x/src/senior/4.component/button/1.vue",relativePath:"./button/1.vue"},{default:r(()=>[i(n)]),_:1}),s[1]||(s[1]=a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"总结"),a("p",null,"通过对前端组件的分析，需要重点关注组件中易变性对组件封装的影响，它会对组件的可复用性、可扩展性产生很大影响")],-1))])}}});export{u as __pageData,F as default};
