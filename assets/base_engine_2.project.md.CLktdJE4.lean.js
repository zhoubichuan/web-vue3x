import{_ as t,o as i,c as a,a4 as d}from"./chunks/framework.P-dDI4ot.js";const n="/web-vue3x/assets/13.deploy.BfTBP-xG.png",u=JSON.parse('{"title":"二.创建项目","description":"","frontmatter":{"lang":"zh-CN","sidebarDepth":2,"meta":[{"name":"description","content":"个人总结的vuepress学习技术文档-语法"},{"name":"keywords","content":"vuepress,最新技术文档,vuepress语法,markdown语法"}]},"headers":[],"relativePath":"base/engine/2.project.md","filePath":"base/engine/2.project.md","lastUpdated":1718897544000}'),e={name:"base/engine/2.project.md"};function l(p,s,h,r,k,c){return i(),a("div",null,s[0]||(s[0]=[d(`<h1 id="二-创建项目" tabindex="-1">二.创建项目 <a class="header-anchor" href="#二-创建项目" aria-label="Permalink to &quot;二.创建项目&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">前言</p><p>了解 vue 项目创建过程以及其目录结构，在开发中需要注意的地方，能够更好地规范前端开发</p></div><h2 id="_1-vue-cli-2-x-中" tabindex="-1">1.vue-cli 2.x 中 <a class="header-anchor" href="#_1-vue-cli-2-x-中" aria-label="Permalink to &quot;1.vue-cli 2.x 中&quot;">​</a></h2><ul><li>安装<code>vue-cli</code></li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue-cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>项目创建</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">template-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">project-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用旧版（2.X）创建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vue/cli-init</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &#39;vue init&#39;的运行效果与‘vue-cli@2.x’相同</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webpack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> projectname</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_2-vue-cli-3-x-中" tabindex="-1">2.vue-cli 3.x 中 <a class="header-anchor" href="#_2-vue-cli-3-x-中" aria-label="Permalink to &quot;2.vue-cli 3.x 中&quot;">​</a></h2><h3 id="_2-1-安装-vue-cli" tabindex="-1">2.1 安装 <code>@vue/cli</code> <a class="header-anchor" href="#_2-1-安装-vue-cli" aria-label="Permalink to &quot;2.1 安装 \`@vue/cli\`&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # Vue-cli3.0 需要在 Node.js 8.9 或更高版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 在安装 node 的时候，npm 包管理器会自动安装，通过查看 npm 版本来判断是否安装成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vue/cli</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 或者使用yarn安装 yarn install -g @vue/cli  全局安装 Vue-cli 3.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-2-通过-vue-cli-创建项目" tabindex="-1">2.2 通过 <code>@vue/cli</code> 创建项目 <a class="header-anchor" href="#_2-2-通过-vue-cli-创建项目" aria-label="Permalink to &quot;2.2 通过 \`@vue/cli\` 创建项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue3-demo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-3-运行项目" tabindex="-1">2.3 运行项目 <a class="header-anchor" href="#_2-3-运行项目" aria-label="Permalink to &quot;2.3 运行项目&quot;">​</a></h3><ul><li><p>查看 vue 版本</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查询版本是否为3.x</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>启动项目</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 或者 npm run serve</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><h3 id="_2-4-项目目录结构" tabindex="-1">2.4 项目目录结构 <a class="header-anchor" href="#_2-4-项目目录结构" aria-label="Permalink to &quot;2.4 项目目录结构&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node_modules</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 项目依赖包目录，存放下载依赖的文件夹</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # 存放不会变动静态的文件，它与src/assets的区别在于，public目录中的文件不被webpack打包处理，会原样拷贝到dist目录下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> favicon.ico</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 在浏览器上显示的图标</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.html</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 主页面文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 源码文件夹</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assets</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 存放组件中的静态资源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> components</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 存放一些公共组件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> views</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 存放所有的路由组件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> App.vue</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 应用根主组件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.js</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 应用入口 js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> router</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 路由配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> store</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # vuex状态管理文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .eslintrc.js</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # eslint相关配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .gitignore</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # git 版本管制忽略的配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .postcssrc.js</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # postcss一种对css编译的工具，类似babel对js的处理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> babel.config.js</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # babel 的配置,即ES6语法编译配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 项目基本信息,包依赖配置信息等</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn.lock</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 用于记录当前状态下实际安装的各个包的具体来源和版本号等, 保证其他人在 npm install 项目时大家的依赖能保证一致.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>开发规范 <ul><li>命名规范（文件命名，变量，函数，class， id） 驼峰， - _ 约定法</li><li>目录规范（目录如何建立） 划分目录结构 约定法</li></ul></li></ul><h2 id="_3-前端技术选型" tabindex="-1">3.前端技术选型 <a class="header-anchor" href="#_3-前端技术选型" aria-label="Permalink to &quot;3.前端技术选型&quot;">​</a></h2><p><img src="`+n+'" alt="" loading="lazy"></p><details class="details custom-block"><summary>在 Vue 3.x 项目中</summary><ul><li><p>技术选型（简单项目）</p><table tabindex="0"><thead><tr><th>工具选择</th><th>依赖包</th><th>说明</th><th>其他</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>脚手架</td><td>vue-cli3.x</td><td>创建项目用</td><td></td><td>✅</td><td></td></tr><tr><td>框架</td><td>vue2.x</td><td>项目核心包</td><td></td><td>✅</td><td></td></tr><tr><td>CSS 语言</td><td>scss + postcss</td><td>scss 保持和 element plus 一致，postcss 提高兼容性</td><td></td><td>❌</td><td></td></tr><tr><td>JS 编译</td><td>babel</td><td>将 es6 的语法编译成 es5 的语法</td><td></td><td>✅</td><td>提高兼容性</td></tr><tr><td>模块打包</td><td>webpack 全家桶</td><td></td><td></td><td>✅</td><td></td></tr><tr><td>路由</td><td>Vue-router 3.x</td><td></td><td></td><td>✅</td><td>一般项目都会用到</td></tr><tr><td>数据流</td><td>Vuex 3.x</td><td></td><td></td><td>❌</td><td></td></tr><tr><td>请求库</td><td>axios</td><td></td><td></td><td>✅</td><td>一般项目中都要用这个</td></tr><tr><td>UI</td><td>Element UI</td><td>推荐 ui 库</td><td></td><td>✅</td><td></td></tr></tbody></table></li><li><p>技术选型（复杂项目）</p><table tabindex="0"><thead><tr><th>工具选择</th><th>依赖包</th><th>说明</th><th>其他</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>JS 语言</td><td>TypeScript</td><td>支持静态类型检查</td><td></td><td>❌</td><td></td></tr><tr><td>单元测试</td><td>jest + moca</td><td>提高前端代码的健壮性</td><td></td><td>❌</td><td>一般在开发 ui 组件库的时候会用到</td></tr><tr><td>代码风格</td><td>eslint+prettier</td><td>可以强制开发人员用同一种规范开发</td><td></td><td>❌</td><td>不强制，但是建议统一代码风格</td></tr><tr><td>JS 压缩</td><td>TerserJS</td><td>提高生产环境性能</td><td></td><td>✅</td><td></td></tr><tr><td>CSS 压缩</td><td>cssnano</td><td>提高生产环境性能</td><td></td><td>✅</td><td></td></tr><tr><td>国际化</td><td>i18n</td><td></td><td></td><td>❌</td><td>需要用到国际化的项目推荐用这个实现</td></tr><tr><td>静态文档</td><td>-</td><td></td><td></td><td>❌</td><td></td></tr><tr><td>微前端</td><td>qiankun</td><td></td><td></td><td>❌</td><td>微前端项目推荐用这种方案</td></tr><tr><td>图表库</td><td>echarts</td><td></td><td></td><td>❌</td><td>需要用到图表的项目推荐用这个</td></tr></tbody></table></li></ul></details><details class="details custom-block"><summary>在 vue3.x 项目中</summary><ul><li><p>技术选型（简单项目）</p><table tabindex="0"><thead><tr><th>工具选择</th><th>依赖包</th><th>说明</th><th>其他</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>脚手架</td><td>vue-cli3.x</td><td>创建项目用</td><td></td><td>✅</td><td></td></tr><tr><td>框架</td><td>vue3.x</td><td>项目核心包</td><td></td><td>✅</td><td></td></tr><tr><td>CSS 语言</td><td>scss + postcss</td><td>scss 保持和 element plus 一致，postcss 提高兼容性</td><td></td><td>❌</td><td></td></tr><tr><td>JS 编译</td><td>babel</td><td>将 es6 的语法编译成 es5 的语法</td><td></td><td>✅</td><td>提高兼容性</td></tr><tr><td>模块打包</td><td>webpack 全家桶</td><td></td><td></td><td>✅</td><td></td></tr><tr><td>路由</td><td>Vue-router 4.x</td><td></td><td></td><td>✅</td><td>一般项目都会用到</td></tr><tr><td>数据流</td><td>Vuex 4.x</td><td></td><td></td><td>❌</td><td>vue2.x 中一般都会用到，vue3.x 中有替代方案</td></tr><tr><td>请求库</td><td>axios</td><td></td><td></td><td>✅</td><td>一般项目中都要用这个</td></tr><tr><td>UI</td><td>Element Plus</td><td>element ui 推荐 ui 库</td><td></td><td>✅</td><td></td></tr></tbody></table></li><li><p>技术选型（复杂项目）</p><table tabindex="0"><thead><tr><th>工具选择</th><th>依赖包</th><th>说明</th><th>其他</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>JS 语言</td><td>TypeScript</td><td>支持静态类型检查</td><td></td><td>❌</td><td></td></tr><tr><td>单元测试</td><td>jest + moca</td><td>提高前端代码的健壮性</td><td></td><td>❌</td><td>一般在开发 ui 组件库的时候会用到</td></tr><tr><td>代码风格</td><td>eslint+prettier</td><td>可以强制开发人员用同一种规范开发</td><td></td><td>❌</td><td>不强制，但是建议统一代码风格</td></tr><tr><td>JS 压缩</td><td>TerserJS</td><td>提高生产环境性能</td><td></td><td>✅</td><td></td></tr><tr><td>CSS 压缩</td><td>cssnano</td><td>提高生产环境性能</td><td></td><td>✅</td><td></td></tr><tr><td>国际化</td><td>i18n</td><td></td><td></td><td>❌</td><td>需要用到国际化的项目推荐用这个实现</td></tr><tr><td>hooks 库</td><td>VueUse</td><td></td><td></td><td>❌</td><td></td></tr><tr><td>静态文档</td><td>-</td><td></td><td></td><td>❌</td><td></td></tr><tr><td>微前端</td><td>qiankun</td><td></td><td></td><td>❌</td><td>微前端项目推荐用这种方案</td></tr><tr><td>图表库</td><td>echarts</td><td></td><td></td><td>❌</td><td>需要用到图表的项目推荐用这个</td></tr></tbody></table></li></ul></details><div class="tip custom-block"><p class="custom-block-title">总结</p><p>了解 vue 项目创建过程以及其目录结构，每个目录的具体作用，在开发中需要注意的地方，能够更好地规范前端开发</p></div>',22)]))}const b=t(e,[["render",l]]);export{u as __pageData,b as default};
